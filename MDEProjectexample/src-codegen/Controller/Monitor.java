// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package Controller;

import java.util.HashMap;
import java.util.Set;

import Controller.Observer;
import Controller.ViewFactory;
import Model.Environment;
import Model.IRobot;
import Model.Mission;
import Model.Robot;
import Model.State;
import Model.Strategy;
import project.AbstractRobotSimulator;
import project.AbstractSimulatorMonitor;
import project.RobotAvatar;
import project.SimulatorMonitor;

/************************************************************/
/**
 * 
 */
public class Monitor extends AbstractSimulatorMonitor<RobotAvatar> implements Observer {
	
	/**
	 * 
	 */
	private IRobot robot;
	private HashMap <Robot,RobotAvatar> robotAvatarModels;
	
	public Monitor(Set<RobotAvatar> robotAvatars, Environment environment) {
		super(robotAvatars, environment);
		this.robotAvatarModels = new HashMap<Robot, RobotAvatar>();
		setUpRobotAvatars(robotAvatars);
		
	}
	/**
	 * 
	 */
	private ViewFactory viewfactory;

	/**
	 * 
	 * @param robot 
	 */
	
	private void setUpRobotAvatars(Set<RobotAvatar> robotAvatars) {
		for (RobotAvatar rob:robotAvatars) {
			this.robotAvatarModels.put(getRobotAvatarParams(rob), rob);
		}
		
	}
	private void updateState(IRobot robot) {
		//this.robot.setState(robot.getState());
	}

	/**
	 * 
	 */
	private void updateView() {
	}

	/**
	 * 
	 * @param robot 
	 */
	private void updatePosition(IRobot robot) {
		for (Robot rob : robotAvatarModels.keySet()) {
			if 
		}
	}

	/**
	 * 
	 * @param robot 
	 */
	private void updateMission(IRobot robot) {
	}

	/**
	 * 
	 * @param robot 
	 */
	public void update(IRobot robot) {
		
	}


	@Override
	public void update(RobotAvatar arg0) {
		
		
	}
	
	private Robot getRobotAvatarParams(RobotAvatar robAvatar) {
		Strategy s = new Strategy();
		Mission m = new Mission(robAvatar.getName(),null);
		
		
		return new Robot(robAvatar.getName(),robAvatar.getPosition(),s,State.OKAY,m);
	}


	
};
